# .github/workflows/ai-code-review.yml (v4 - Fix script injection issue)

name: AI Code Review with Gemini

on:
  pull_request:
    types: [opened, synchronize]

permissions:
  contents: read
  pull-requests: write

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
      # 步驟 1: 安裝 jq 工具
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      # 步驟 2: 取得儲存庫的程式碼
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 步驟 3: 抓取 Pull Request 的程式碼差異 (diff)
      - name: Get PR Diff
        id: get_diff
        run: |
          git diff --no-color "${{ github.event.pull_request.base.sha }}" "${{ github.event.pull_request.head.sha }}" > diff.txt
          
          if [ ! -s diff.txt ]; then
            echo "No code changes detected. Skipping AI review."
            echo "continue=false" >> $GITHUB_OUTPUT
          else
            echo "Code changes detected. Proceeding with AI review."
            echo "continue=true" >> $GITHUB_OUTPUT
          fi

      # 步驟 4: 呼叫 Gemini API 進行程式碼審查
      - name: Call Gemini API for Code Review
        id: call_gemini
        if: steps.get_diff.outputs.continue == 'true'
        run: |
          CODE_DIFF=$(cat diff.txt)
          JSON_PAYLOAD=$(jq -n --arg diff "$CODE_DIFF" '{
            "contents": [{
              "parts": [{
                "text": "你是一位資深的程式碼審查員 (Senior Code reviewer)，專長在於找出技術債、重構建議與 clean code 和 SOLID 原則。\n\n以下是 pull request 的程式碼差異 (diff)，請根據你的專業，審查這段程式碼。請明確指出是否有潛在的技術債、程式碼壞味道 (code smell)、未來的維護風險或潛在的安全性問題。最後，請以條列式的方式提供具體的重構建議。\n\n---程式碼差異開始---\n\n\($diff)\n\n---程式碼差異結束---"
              }]
            }],
            "generationConfig": { "temperature": 0.4, "topK": 32, "topP": 1, "maxOutputTokens": 4096, "stopSequences": [] },
            "safetySettings": [
              { "category": "HARM_CATEGORY_HARASSMENT", "threshold": "BLOCK_MEDIUM_AND_ABOVE" }, { "category": "HARM_CATEGORY_HATE_SPEECH", "threshold": "BLOCK_MEDIUM_AND_ABOVE" },
              { "category": "HARM_CATEGORY_SEXUALLY_EXPLICIT", "threshold": "BLOCK_MEDIUM_AND_ABOVE" }, { "category": "HARM_CATEGORY_DANGEROUS_CONTENT", "threshold": "BLOCK_MEDIUM_AND_ABOVE" }
            ]
          }')
          API_KEY="${{ secrets.GEMINI_API_KEY }}"
          RESPONSE=$(curl -s -X POST "https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent?key=${API_KEY}" -H "Content-Type: application/json" -d "${JSON_PAYLOAD}")
          if echo "${RESPONSE}" | jq -e '.error' > /dev/null; then echo "::error::Gemini API returned an error:" && echo "${RESPONSE}" && exit 1; fi
          if ! echo "${RESPONSE}" | jq -e '.candidates' > /dev/null; then echo "::error::Gemini API response is not in the expected format. 'candidates' field is missing." && echo "Full response: ${RESPONSE}" && exit 1; fi
          REVIEW_COMMENT=$(echo "${RESPONSE}" | jq -r '.candidates[0].content.parts[0].text')
          echo "review_comment<<EOF" >> $GITHUB_OUTPUT
          echo "${REVIEW_COMMENT}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # 步驟 5: 將 Gemini 的審查建議留言到 Pull Request 上 (修正版)
      - name: Post Review Comment to PR
        if: steps.get_diff.outputs.continue == 'true'
        uses: actions/github-script@v7
        # **新增 env 區塊**：將 review comment 作為環境變數傳入
        env:
          REVIEW_COMMENT: ${{ steps.call_gemini.outputs.review_comment }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # **修改 script 區塊**：從 process.env 讀取變數
          script: |
            const reviewComment = process.env.
